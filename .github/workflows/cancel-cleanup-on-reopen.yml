name: Cancel Cleanup on PR Reopen

on:
  pull_request:
    types: [reopened]

jobs:
  cancel_cleanup:
    name: Cancel Cleanup if Running
    runs-on: ubuntu-latest

    steps:
      - name: List Running Workflows
        id: list_workflows
        uses: actions/github-script@v7
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'cleanup-preview.yml',
              status: 'in_progress'
            });
            const relatedRuns = runs.data.workflow_runs
              .filter(run => run.head_branch === context.payload.pull_request.head.ref)
              .map(run => run.id);
            if (relatedRuns.length === 0) {
              console.log(`No active workflow runs found for branch: ${context.payload.pull_request.head.ref}`);
            } else {
              console.log("Found active workflow runs:", relatedRuns);
            }
            return relatedRuns;
          result-encoding: string

      - name: Cancel Cleanup Workflows
        if: steps.list_workflows.outputs.result != '[]'
        uses: actions/github-script@v7
        env:
          WORKFLOW_RUN_IDS: "${{ steps.list_workflows.outputs.result }}"
        with:
          script: |
            const { WORKFLOW_RUN_IDS } = process.env;
            console.log(`Cancelling ${WORKFLOW_RUN_IDS.length} workflow run(s) for branch: ${context.payload.pull_request.head.ref}`);
            for (const run_id of WORKFLOW_RUN_IDS) {
              await github.rest.actions.cancelWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id
              });
              console.log(`Cancelled workflow run with ID: ${run_id}`);
            }
            console.log("All relevant workflow runs have been cancelled.");
