name: Cleanup Deployment Preview
on:
  pull_request:
    types: [closed]

jobs:
  cleanup:
    name: Cleanup Deployment Preview
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq (latest)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Get Changed Files
        id: changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
          echo "$CHANGED_FILES" > changed_files.txt

      - name: Determine Affected Service
        id: determine_service
        run: |
          SERVICES_COUNT=$(yq e '.services | length' .github/preview-deployments.config.yml || echo 0)
      
          for i in $(seq 0 $((SERVICES_COUNT - 1))); do
            if grep -q "^$(yq e ".services[$i].path" .github/preview-deployments.config.yml)" changed_files.txt; then
              echo "service=$(yq e ".services[$i].name" .github/preview-deployments.config.yml)" >> "$GITHUB_OUTPUT"
              echo "project_id=$(yq e ".services[$i].project_id" .github/preview-deployments.config.yml)" >> "$GITHUB_OUTPUT"
              echo "region=$(yq e ".services[$i].region" .github/preview-deployments.config.yml)" >> "$GITHUB_OUTPUT"
              echo "environment=$(yq e ".services[$i].environment" .github/preview-deployments.config.yml)" >> "$GITHUB_OUTPUT"
              echo "sa_key_secret_name=$(yq e ".services[$i].sa_key_secret_name" .github/preview-deployments.config.yml)" >> "$GITHUB_OUTPUT"
              break
            fi
          done

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ steps.determine_service.outputs.project_id }}
          credentials_json: ${{ secrets[ steps.determine_service.outputs.sa_key_secret_name ] }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ steps.determine_service.outputs.project_id }}
          
      - name: Remove Cloud Run Tag
        run: |
          gcloud run services update-traffic ${{ steps.determine_service.outputs.service }} \
            --region=${{ steps.determine_service.outputs.region }} \
            --remove-tags=pr-${{ github.event.pull_request.number }}