name: Cleanup Deployment Preview

on:
  pull_request:
    types: [closed]

jobs:
  determine_services:
    name: Determine Affected Services
    runs-on: ubuntu-latest
    outputs:
      services_matrix: ${{ steps.set_matrix.outputs.services_matrix }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Get Changed Files
        id: get_changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
          echo "$CHANGED_FILES" > changed_files.txt

      - name: Determine Affected Services
        id: determine
        run: |
          SERVICES=()
          SERVICES_COUNT=$(yq e '.services | length' .github/preview-deployments.config.yml || echo 0)
          for i in $(seq 0 $((SERVICES_COUNT - 1))); do
            SERVICE_PATH=$(yq e ".services[$i].path" .github/preview-deployments.config.yml)
            if grep -q "^$SERVICE_PATH" changed_files.txt; then
              SERVICE_NAME=$(yq e ".services[$i].name" .github/preview-deployments.config.yml)
              PROJECT_ID=$(yq e ".services[$i].project_id" .github/preview-deployments.config.yml)
              REGION=$(yq e ".services[$i].region" .github/preview-deployments.config.yml)
              SA_KEY_SECRET_NAME=$(yq e ".services[$i].sa_key_secret_name" .github/preview-deployments.config.yml)
              SERVICES+=("{\"service\":\"$SERVICE_NAME\", \"project_id\":\"$PROJECT_ID\", \"region\":\"$REGION\", \"sa_key_secret_name\":\"$SA_KEY_SECRET_NAME\"}")
            fi
          done
          echo "${SERVICES[@]}" | jq -c '.' > services_matrix.json

      - name: Set Matrix Output
        id: set_matrix
        run: |
          TASKS=$(echo $(cat services_matrix.json) | sed 's/ //g')
          echo "::set-output name=services_matrix::$TASKS"

  cleanup:
    name: Cleanup Services
    needs: determine_services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.determine_services.outputs.services_matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ matrix.service.project_id }}
          credentials_json: ${{ secrets[matrix.service.sa_key_secret_name] }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ matrix.service.project_id }}

      - name: Remove Cloud Run Tag
        run: |
          gcloud run services update-traffic ${{ matrix.service.service }} \
            --region=${{ matrix.service.region }} \
            --remove-tags=pr-${{ github.event.pull_request.number }}