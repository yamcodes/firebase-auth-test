name: Cleanup Deployment Preview

on:
  pull_request:
    types: [closed]

jobs:
  cleanup:
    name: Cleanup Deployment Preview
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install yq (latest)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Get Changed Files
        id: changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})
          echo "$CHANGED_FILES" > changed_files.txt

      - name: Determine Affected Service
        id: determine_service
        run: |
          SERVICES_COUNT=$(yq e '.services | length' .github/preview-deployments.config.yml || echo 0)

          for i in $(seq 0 $((SERVICES_COUNT - 1))); do
            SERVICE_NAME=$(yq e ".services[$i].name" .github/preview-deployments.config.yml)
            SERVICE_PATH=$(yq e ".services[$i].path" .github/preview-deployments.config.yml)
            PROJECT_ID=$(yq e ".services[$i].project_id" .github/preview-deployments.config.yml)
            REGION=$(yq e ".services[$i].region" .github/preview-deployments.config.yml)
            ENVIRONMENT=$(yq e ".services[$i].environment" .github/preview-deployments.config.yml)

            if grep -q "^$SERVICE_PATH" changed_files.txt; then
              echo "service=$SERVICE_NAME" >> "$GITHUB_OUTPUT"
              echo "project_id=$PROJECT_ID" >> "$GITHUB_OUTPUT"
              echo "region=$REGION" >> "$GITHUB_OUTPUT"
              echo "environment=$ENVIRONMENT" >> "$GITHUB_OUTPUT"
              break
            fi
          done

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ steps.determine_service.outputs.project_id }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ steps.determine_service.outputs.project_id }}
          
      - name: Remove Cloud Run Tag
        run: |
          gcloud run services update-traffic ${{ steps.determine_service.outputs.service }} \
            --region=${{ steps.determine_service.outputs.region }} \
            --remove-tags=pr-${{ github.event.pull_request.number }}