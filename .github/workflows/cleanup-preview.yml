name: Cleanup deployment preview

on:
  pull_request:
    types: [closed]

jobs:
  determine_services:
    name: Determine affected services
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Get changed files
        id: get_changed_files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
          git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }} > changed_files.txt

      - name: Determine affected services
        id: determine
        run: |
          SERVICES=()
          SERVICES_COUNT=$(yq e '.services | length' .github/preview-deployments.config.yml || echo 0)
          for i in $(seq 0 $((SERVICES_COUNT - 1))); do
            SERVICE_PATH=$(yq e ".services[$i].path" .github/preview-deployments.config.yml)
            if grep -q "^$SERVICE_PATH" changed_files.txt; then
              SERVICE_NAME=$(yq e ".services[$i].name" .github/preview-deployments.config.yml)
              PROJECT_ID=$(yq e ".services[$i].project_id" .github/preview-deployments.config.yml)
              REGION=$(yq e ".services[$i].region" .github/preview-deployments.config.yml)
              SA_KEY_SECRET_NAME=$(yq e ".services[$i].sa_key_secret_name" .github/preview-deployments.config.yml)
              SERVICES+=("{\"name\":\"$SERVICE_NAME\", \"project_id\":\"$PROJECT_ID\", \"region\":\"$REGION\", \"sa_key_secret_name\":\"$SA_KEY_SECRET_NAME\"}")
            fi
          done
          # Create JSON array output for matrix strategy
          echo "${SERVICES[@]}" | jq -c --slurp '.' > services_matrix.json

      - name: Set Matrix Output
        id: set_matrix
        run: |
          MATRIX=$(echo $(cat services_matrix.json) | sed 's/ //g')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  cleanup:
    name: Cleanup services
    needs: determine_services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.determine_services.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for deployments to complete
        id: wait_for_deployments
        env:
          ENVIRONMENT: preview-${{ matrix.service.name }}
          MAX_RETRIES: 10
          RETRY_DELAY: 180
        run: |
          COUNT=0
          ANY_SUCCESS=false
      
          while [[ $COUNT -lt $MAX_RETRIES ]]; do
            ANY_IN_PROGRESS=false
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${{ github.repository }}/deployments?ref=${{ github.head_ref }}")
      
            # Filter deployments for the target environment
            DEPLOYMENTS=$(echo "$RESPONSE" | jq -c ".[] | select(.environment == \"$ENVIRONMENT\")")
      
            if [[ -z "$DEPLOYMENTS" ]]; then
              echo "No active deployments found for environment $ENVIRONMENT."
              break
            fi
      
            # Check the status of each deployment
            for DEPLOYMENT in $(echo "$DEPLOYMENTS" | jq -r '.id'); do
              DEPLOYMENT_STATUS_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github+json" \
                "https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT/statuses" \
                | jq -r '.[0].state')
      
              if [[ "$DEPLOYMENT_STATUS_URL" == "success" ]]; then
                echo "Deployment $DEPLOYMENT succeeded."
                ANY_SUCCESS=true
              elif [[ "$DEPLOYMENT_STATUS_URL" == "in_progress" ]]; then
                echo "Deployment $DEPLOYMENT is still in progress."
                ANY_IN_PROGRESS=true
              fi
            done
      
            if [[ "$ANY_IN_PROGRESS" == "true" ]]; then
              echo "($((COUNT+1))/$MAX_RETRIES) Some deployments are still in progress. Retrying in $RETRY_DELAY seconds..."
              sleep $RETRY_DELAY
            fi
            COUNT=$((COUNT + 1))
          done
      
          # Final evaluation
          if [[ "$ANY_SUCCESS" == "false" ]]; then
            echo "No successful deployments after $MAX_RETRIES retries. Skipping cleanup."
            echo "any_successful_deployments=false" >> $GITHUB_OUTPUT
          else
            echo "At least one deployment succeeded. Proceeding with cleanup."
            echo "any_successful_deployments=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        if: steps.wait_for_deployments.outputs.any_successful_deployments == 'true'
        with:
          project_id: ${{ matrix.service.project_id }}
          credentials_json: ${{ secrets[matrix.service.sa_key_secret_name] }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        if: steps.wait_for_deployments.outputs.any_successful_deployments == 'true'
        with:
          project_id: ${{ matrix.service.project_id }}

      # This is necessary in case the PR was reopened during the cleanup action
      - name: Verify the PR is closed before removing the tag
        if: steps.wait_for_deployments.outputs.any_successful_deployments == 'true'
        run: |
          if [[ ${{ github.event.pull_request.state }} != "closed" ]]; then
            echo "PR has been reopened. Skipping cleanup."
            exit 0
          fi

      - name: Remove Cloud Run tag
        if: steps.wait_for_deployments.outputs.any_successful_deployments == 'true'
        run: |
          gcloud run services update-traffic ${{ matrix.service.name }} \
            --region=${{ matrix.service.region }} \
            --remove-tags=pr-${{ github.event.pull_request.number }}