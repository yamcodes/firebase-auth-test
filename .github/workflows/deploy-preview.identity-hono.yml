name: Deploy preview

on:
  pull_request:
    paths:
      - services/fat-identity-hono/**

env:
  PROJECT_ID: fat-core-dev
  REGION: europe-west3
  SERVICE_NAME: fat-identity-hono-gh
  DIR: services/fat-identity-hono
  DOCKER_AUTH_URL: europe-west3-docker.pkg.dev
  ARTIFACT_REGISTRY_REPO_URL: europe-west3-docker.pkg.dev/fat-core-dev/cloud-run-preview/firebase-auth-test/fat-identity-hono-gh

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    environment: development
    permissions:
      contents: read
      deployments: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: pr-${{ github.event.pull_request.number }}
          transient-environment: true

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY_FAT_CORE_DEV }}

      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      
      - name: Authenticate Docker with Google Cloud Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.DOCKER_AUTH_URL }}

      - name: Build Docker image
        run: |
          docker build . -t ${{ env.ARTIFACT_REGISTRY_REPO_URL }}/app:${{ github.sha }} --file ${{ env.DIR }}/Dockerfile

      - name: Push the docker image to Artifact Registry
        run: |
          docker push ${{ env.ARTIFACT_REGISTRY_REPO_URL }}/app:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.ARTIFACT_REGISTRY_REPO_URL }}/app:${{ github.sha }}
          no_traffic: true
          tag: pr-${{ github.event.pull_request.number }}
          labels: |
            managed-by=github-actions
            commit-sha=${{ github.sha }}
            pr-number=${{ github.event.pull_request.number }}
          
      - name: Update deployment status (success)
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          environment-url: ${{ steps.deploy.outputs.url }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployed to: ${{ steps.deploy.outputs.url }}'
            })
